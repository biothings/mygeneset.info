name: Scheduled Tests

on:
  push: {}
  pull_request:
    branches:
      - slack-messages-in-pytest-from-biothings
  workflow_dispatch: # Manual trigger
  schedule: # Scheduled trigger
    - cron: "0 6 * * 1-5"  # Runs every weekday at 6 AM UTC

jobs:
  run_app_tests:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11" ]

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
          echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
          echo "region = $AWS_REGION" >> ~/.aws/credentials

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements_web.txt
          pip install pytest boto3

      - name: Set build version file name for the current application
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | awk -F'/' '{print $2}')
          echo "Repository name is: $REPO_NAME"
          echo "BUILD_VERSION_FILE=$REPO_NAME.txt" >> $GITHUB_ENV

      - name: Retrieve release version from S3
        run: |
          source .venv/bin/activate
          echo "Fetching BUILD_VERSION_S3 from S3..."
          export BUILD_VERSION_S3=$(python -c "
            import boto3
            import os
            s3 = boto3.client('s3')
            try:
                s3.download_file('biothings-codebuild', '${{ env.BUILD_VERSION_FILE }}', '${{ env.BUILD_VERSION_FILE }}')
                with open('${{ env.BUILD_VERSION_FILE }}', 'r') as file:
                    print(file.read().strip())
            except Exception as e:
                print('No ${{ env.BUILD_VERSION_FILE }} found in S3, assuming first run.')
          ")
          echo "BUILD_VERSION_S3=$BUILD_VERSION_S3" >> $GITHUB_ENV

      - name: Get release version from the Hub
        id: http_request
        run: |
          response=$(curl -s "https://mygene.info/metadata")
          echo "Response: $response"
          echo "BUILD_VERSION_HUB=$(echo $response | jq -r .build_version)" >> $GITHUB_ENV

          echo "### Old Build Version ${{ env.BUILD_VERSION_S3 }}"
          echo "### New Build Version: ${{ env.BUILD_VERSION_HUB }}"
          if [[ "${{ env.BUILD_VERSION_HUB }}" != "$BUILD_VERSION_S3" ]]; then
            source .venv/bin/activate
            cp .venv/lib/python3.11/site-packages/biothings/tests/conftest_slack/conftest.py src/tests/
            python -m pytest src/tests/test_remote.py --slack-webhook-url=${{ secrets.SLACK_WEBHOOK_URL }} --slack-channel="#observability-test" --slack-username="Mygeneset.Info Tests"
            rm src/tests/conftest.py
          fi
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Store new release version to S3
        if: ${{ env.BUILD_VERSION_HUB != '' }}
        run: |
          source .venv/bin/activate
          echo "Storing new BUILD_VERSION_S3 to S3..."
          echo "${{ env.BUILD_VERSION_HUB }}" > ${{ env.BUILD_VERSION_FILE }}
          python -c "
            import boto3
            s3 = boto3.client('s3')
            s3.upload_file('${{ env.BUILD_VERSION_FILE }}', 'biothings-codebuild', '${{ env.BUILD_VERSION_FILE }}')
          "
        
      # - name: Setup tmate debug session on failure
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
